function SRT

% SRT - graphical user interface 
% 
% Developed by Dr. Mihaela Duta, mihaela.duta@psy.ox.ac.uk
% Department of Experimental Psychology, University of Oxford 

% get screen resolution
set(0,'units','pixels')  
screen_res = get(0,'screensize');
settings.screen.wdt     = screen_res(3);
settings.screen.hgt     = screen_res(4);
% define gui main screen
settings.gui.wdt        = settings.screen.wdt/2;
settings.gui.hgt        = settings.screen.hgt/2;
settings.gui.pos        = [settings.screen.wdt/2-settings.gui.wdt/2 settings.screen.hgt/2-settings.gui.hgt/2 settings.gui.wdt settings.gui.hgt];
% colours
settings.gui.colours.bg      = [255 255 255]/255;
settings.gui.colours.fg      = [0 33 71]/255;
settings.gui.colours.warning = [207 122 48]/255;

settings.cntrls.wdt  = settings.gui.wdt/5;
settings.cntrls.hgt  = settings.gui.hgt/20;
settings.cntrls.ypos = (1/22)*ones(1,10); settings.cntrls.ypos = [19:-2:1].*settings.cntrls.ypos;
settings.cntrls.colours.bg.done    = settings.gui.colours.bg;
settings.cntrls.colours.bg.warning = settings.gui.colours.warning;
settings.cntrls.colours.fg.warning = settings.gui.colours.warning;
settings.cntrls.colours.fg.done    = settings.gui.colours.fg;


settings.btns.wdt = settings.gui.wdt/7;
settings.btns.hgt = 2*settings.cntrls.hgt;
settings.btns.colours.bg = settings.gui.colours.bg;
settings.btns.colours.fg = settings.gui.colours.fg;

% font
settings.font.name = 'Arial';
settings.font.size = round(settings.cntrls.hgt/4);
settings.font.weight = 'bold';


% ID edit field
i_cntrl = 1;
c_settings.wdt = settings.cntrls.wdt;
c_settings.hgt = settings.cntrls.hgt;
c_settings.pos = round([settings.gui.wdt/2-c_settings.wdt/2 settings.cntrls.ypos(i_cntrl)*settings.gui.hgt-c_settings.hgt/2 c_settings.wdt c_settings.hgt]);
settings.edts.ID = c_settings;

% ID text field
c_settings.wdt = settings.cntrls.wdt;
c_settings.hgt = settings.cntrls.hgt;
c_settings.pos = [settings.edts.ID.pos(1) settings.edts.ID.pos(2)+0.8*settings.edts.ID.hgt settings.edts.ID.pos(3:4)];
settings.txts.ID = c_settings;

% SCHOOL edit field
i_cntrl = i_cntrl + 1;
c_settings.wdt = settings.cntrls.wdt;
c_settings.hgt = settings.cntrls.hgt;
c_settings.pos = round([settings.gui.wdt/2-c_settings.wdt/2 settings.cntrls.ypos(i_cntrl)*settings.gui.hgt-c_settings.hgt/2 c_settings.wdt c_settings.hgt]);
settings.edts.school = c_settings;

% SCHOOL text field
c_settings.wdt = settings.cntrls.wdt;
c_settings.hgt = settings.cntrls.hgt;
c_settings.pos = [settings.edts.school.pos(1) settings.edts.school.pos(2)+0.8*settings.edts.school.hgt settings.edts.school.pos(3:4)];
settings.txts.school = c_settings;

% group popup
i_cntrl = i_cntrl + 1;
c_settings.wdt = settings.cntrls.wdt; 
c_settings.hgt = settings.cntrls.hgt;
c_settings.pos = round([settings.gui.wdt/2-c_settings.wdt/2 settings.cntrls.ypos(i_cntrl)*settings.gui.hgt-c_settings.hgt/2 c_settings.wdt c_settings.hgt]);
settings.pops.group = c_settings;

% age edit
i_cntrl = i_cntrl + 1;
c_settings.wdt = settings.cntrls.wdt;
c_settings.hgt = settings.cntrls.hgt;
c_settings.pos = round([settings.gui.wdt/2-c_settings.wdt/2 settings.cntrls.ypos(i_cntrl)*settings.gui.hgt-c_settings.hgt/2 c_settings.wdt c_settings.hgt]);
% settings.pops.age = c_settings;
settings.edts.age = c_settings;

% age text field
c_settings.wdt = settings.cntrls.wdt;
c_settings.hgt = settings.cntrls.hgt;
c_settings.pos = [settings.edts.age.pos(1) settings.edts.age.pos(2)+0.8*settings.edts.age.hgt settings.edts.age.pos(3:4)];
settings.txts.age = c_settings;

% gender popup
i_cntrl = i_cntrl + 1;
c_settings.wdt = settings.cntrls.wdt;
c_settings.hgt = settings.cntrls.hgt;
c_settings.pos = round([settings.gui.wdt/2-c_settings.wdt/2 settings.cntrls.ypos(i_cntrl)*settings.gui.hgt-c_settings.hgt/2 c_settings.wdt c_settings.hgt]);
settings.pops.gender = c_settings;

% blocks popup
i_cntrl = i_cntrl + 1;
c_settings.wdt = settings.cntrls.wdt;
c_settings.hgt = settings.cntrls.hgt;
c_settings.pos = round([settings.gui.wdt/2-c_settings.wdt/2 settings.cntrls.ypos(i_cntrl)*settings.gui.hgt-c_settings.hgt/2 c_settings.wdt c_settings.hgt]);
settings.pops.blocks = c_settings;

% sets popup
i_cntrl = i_cntrl + 1;
c_settings.wdt = settings.cntrls.wdt;
c_settings.hgt = settings.cntrls.hgt;
c_settings.pos = round([settings.gui.wdt/2-c_settings.wdt/2 settings.cntrls.ypos(i_cntrl)*settings.gui.hgt-c_settings.hgt/2 c_settings.wdt c_settings.hgt]);
settings.pops.sets = c_settings;

% routine popup
i_cntrl = i_cntrl + 1;
c_settings.wdt = settings.cntrls.wdt;
c_settings.hgt = settings.cntrls.hgt;
c_settings.pos = round([settings.gui.wdt/2-c_settings.wdt/2 settings.cntrls.ypos(i_cntrl)*settings.gui.hgt-c_settings.hgt/2 c_settings.wdt c_settings.hgt]);
settings.pops.routine = c_settings;

% start button
i_cntrl = i_cntrl + 1;
c_settings.wdt = settings.btns.wdt;
c_settings.hgt = settings.btns.hgt;
c_settings.pos = round([settings.gui.wdt/2-c_settings.wdt/2 settings.cntrls.ypos(i_cntrl)*settings.gui.hgt-c_settings.hgt/2 c_settings.wdt c_settings.hgt]);
settings.btns.start = c_settings;

% Create and setup components
% %%%%%%%%%%%%%%%%%%%%%%%%%%%
% main figure 
gui.fh = figure( 'Name', 'SRT', ...
                  'units','pixels',...
                  'position', settings.gui.pos,...
                  'color', settings.gui.colours.bg, ...
                  'menubar','none',...
                  'numbertitle','off',...
                  'resize','on', ...
                  'Visible', 'off', ... % hide window while it is being constructed
                  'UserData', settings ...
                  ); 
              
% ID text field
gui.txt_ID = uicontrol('Parent', gui.fh, ...
                 'style','text',...
                 'units','pixels',...
                 'position',settings.txts.ID.pos,...
                 'FontName', settings.font.name, ...
                 'FontSize', 2*settings.font.size,  ...
                 'FontWeight', settings.font.weight,  ...
                 'BackgroundColor', settings.cntrls.colours.bg.done, ...
                 'ForegroundColor', settings.cntrls.colours.fg.done, ...
                 'String', 'ID', ...
                 'Tag', 'txt_ID', ...
                 'HorizontalAlignment', 'left' ...              
                 );               
% ID edit field
gui.edt_ID = uicontrol('Parent', gui.fh, ...
                 'style','edit',...
                 'units','pixels',...
                 'position',settings.edts.ID.pos,...
                 'FontName', settings.font.name, ...
                 'FontSize', settings.font.size,  ...
                 'FontWeight', settings.font.weight,  ...
                 'BackgroundColor', settings.cntrls.colours.bg.warning, ...
                 'ForegroundColor', settings.cntrls.colours.fg.done, ...
                 'String', '', ...
                 'Tag', 'edt_ID', ...
                 'HorizontalAlignment', 'left', ...
                 'Callback', {@edt_ID_Callback} ...
                 ); 
%'keypressfcn', {@edt_ID_Keypressct}...

% SCHOOL text field
gui.txt_ID = uicontrol('Parent', gui.fh, ...
                 'style','text',...
                 'units','pixels',...
                 'position',settings.txts.school.pos,...
                 'FontName', settings.font.name, ...
                 'FontSize', 2*settings.font.size,  ...
                 'FontWeight', settings.font.weight,  ...
                 'BackgroundColor', settings.cntrls.colours.bg.done, ...
                 'ForegroundColor', settings.cntrls.colours.fg.done, ...
                 'String', 'SCHOOL', ...
                 'Tag', 'txt_School', ...
                 'HorizontalAlignment', 'left' ...              
                 );              
             
% SCHOOL edit field
gui.edt_School = uicontrol('Parent', gui.fh, ...
                 'style','edit',...
                 'units','pixels',...
                 'position',settings.edts.school.pos,...
                 'FontName', settings.font.name, ...
                 'FontSize', settings.font.size,  ...
                 'FontWeight', settings.font.weight,  ...
                 'BackgroundColor', settings.cntrls.colours.bg.warning, ...
                 'ForegroundColor', settings.cntrls.colours.fg.done, ...
                 'String', '', ...
                 'Tag', 'edt_School', ...
                 'HorizontalAlignment', 'left', ...
                 'Callback', {@edt_School_Callback} ...              
                 ); 
             
gui.pop_Group = uicontrol('Style','popupmenu',...
           'String',{'Select a group ...', 'TD','SLI'},...
           'units','pixels',...
           'Position',settings.pops.group.pos, ...
           'FontName', settings.font.name, ...
           'FontSize', settings.font.size,  ...
           'FontWeight', settings.font.weight,  ...
           'BackgroundColor', settings.cntrls.colours.bg.done, ...
           'ForegroundColor', settings.cntrls.colours.fg.warning, ...
           'Tag', 'pop_Group', ...
           'SliderStep', [0.2 0.2], ...
           'Visible', 'on', ...
           'Callback', {@pop_Group_Callback} ...       
           );
       
% Age
gui.txt_ID = uicontrol('Parent', gui.fh, ...
                 'style','text',...
                 'units','pixels',...
                 'position',settings.txts.age.pos,...
                 'FontName', settings.font.name, ...
                 'FontSize', 2*settings.font.size,  ...
                 'FontWeight', settings.font.weight,  ...
                 'BackgroundColor', settings.cntrls.colours.bg.done, ...
                 'ForegroundColor', settings.cntrls.colours.fg.done, ...
                 'String', 'AGE', ...
                 'Tag', 'txt_Age', ...
                 'HorizontalAlignment', 'left' ...              
                 );  
             
gui.edt_Age = uicontrol('Parent', gui.fh, ...
                 'style','edit',...
                 'units','pixels',...
                 'position',settings.edts.age.pos,...
                 'FontName', settings.font.name, ...
                 'FontSize', settings.font.size,  ...
                 'FontWeight', settings.font.weight,  ...
                 'BackgroundColor', settings.cntrls.colours.bg.warning, ...
                 'ForegroundColor', settings.cntrls.colours.fg.done, ...
                 'String', '', ...
                 'Tag', 'edt_Age', ...
                 'HorizontalAlignment', 'left', ...
                 'Callback', {@edt_Age_Callback} ...              
                 );
% gui.pop_Age = uicontrol('Style','popupmenu',...
%            'String',{'Select the age ...', '6','7', '8', '9', '10', '11', '12', '13', '14'},...
%            'unit','pixels',...
%            'Position',settings.pops.age.pos, ...
%            'FontName', settings.font.name, ...
%            'FontSize', settings.font.size,  ...
%            'FontWeight', settings.font.weight,  ...
%            'BackgroundColor', settings.cntrls.colours.bg.done, ...
%            'ForegroundColor', settings.cntrls.colours.fg.warning, ...
%            'Tag', 'pop_Age', ...
%            'SliderStep', [0.01 0.1], ...
%            'Visible', 'on', ...
%            'Callback', {@pop_Group_Callback} ...  
%            );

% Gender
gui.pop_Gender = uicontrol('Style','popupmenu',...
           'String',{'Select the sex ...', 'Female', 'Male'},...
           'unit','pixels',...
           'Position',settings.pops.gender.pos, ...
           'FontName', settings.font.name, ...
           'FontSize', settings.font.size,  ...
           'FontWeight', settings.font.weight,  ...
           'BackgroundColor', settings.cntrls.colours.bg.done, ...
           'ForegroundColor', settings.cntrls.colours.fg.warning, ...
           'Tag', 'pop_Gender', ...
           'SliderStep', [0.01 0.1], ...
           'Visible', 'on', ...
           'Callback', {@pop_Gender_Callback} ...  
           );
 
% Blocks
gui.pop_Blocks = uicontrol('Style','popupmenu',...
           'String',{'Select number of blocks ...', '1', '2', '3', '4', '5', '6', '7','8','9','10'},...
           'unit','pixels',...
           'Position',settings.pops.blocks.pos, ...
           'FontName', settings.font.name, ...
           'FontSize', settings.font.size,  ...
           'FontWeight', settings.font.weight,  ...
           'BackgroundColor', settings.cntrls.colours.bg.done, ...
           'ForegroundColor', settings.cntrls.colours.fg.warning, ...
           'Tag', 'pop_Blocks', ...
           'SliderStep', [0.01 0.1], ...
           'Visible', 'on', ...
           'Callback', {@pop_Blocks_Callback} ...  
           );
   
% Sets
gui.pop_Sets = uicontrol('Style','popupmenu',...
           'String',{'Select number of set per block ...', '1', '2', '3', '4', '5'},...
           'unit','pixels',...
           'Position',settings.pops.sets.pos, ...
           'FontName', settings.font.name, ...
           'FontSize', settings.font.size,  ...
           'FontWeight', settings.font.weight,  ...
           'BackgroundColor', settings.cntrls.colours.bg.done, ...
           'ForegroundColor', settings.cntrls.colours.fg.warning, ...
           'Tag', 'pop_Sets', ...
           'SliderStep', [0.01 0.1], ...
           'Visible', 'on', ...
           'Callback', {@pop_Sets_Callback} ...  
           );

% Routine
gui.pop_Routine = uicontrol('Style','popupmenu',...
           'String',{'Select the routine ...', 'Routine1', 'Routine2', 'Routine3', 'Routine4'},...
           'unit','pixels',...
           'Position',settings.pops.routine.pos, ...
           'FontName', settings.font.name, ...
           'FontSize', settings.font.size,  ...
           'FontWeight', settings.font.weight,  ...
           'BackgroundColor', settings.cntrls.colours.bg.done, ...
           'ForegroundColor', settings.cntrls.colours.fg.warning, ...
           'Tag', 'pop_Routine', ...
           'SliderStep', [0.01 0.1], ...
           'Visible', 'on', ...
           'Callback', {@pop_Routine_Callback} ...  
           );       
       
% start button
gui.btn_Start = uicontrol('style','pushbutton',...
                 'unit','pixels',...
                 'position',settings.btns.start.pos,...
                 'string','START', ...
                 'FontName', settings.font.name, ...
                 'FontSize', settings.font.size,  ...
                 'FontWeight', settings.font.weight,  ...
                 'BackgroundColor', settings.btns.colours.bg, ...
                 'ForegroundColor', settings.btns.colours.fg, ...
                 'HorizontalAlignment', 'center', ...
                 'Tag', 'btn_Start', ...
                 'Visible', 'on', ...
                 'Callback', {@btn_Start_Callback} ...
                 );  
                          

% align all components along their centers.
align([gui.btn_Start],'Center','None');

% make gui visible
set(gui.fh, 'Visible', 'on');

% set focus on the ID field
uicontrol(gui.edt_ID);

end

% ID callback
function edt_ID_Callback(handle, event)
    gui_hndl = get(handle, 'Parent'); settings = get(gui_hndl, 'UserData');   
    the_txt = get(handle, 'String');
    if(isempty(the_txt)), set(handle, 'BackgroundColor', settings.cntrls.colours.bg.warning);
    else set(handle, 'BackgroundColor', settings.cntrls.colours.bg.done); end, drawnow
end

% SCHOOL callback
function edt_School_Callback(handle, event)
    gui_hndl = get(handle, 'Parent'); settings = get(gui_hndl, 'UserData');   
    the_txt = get(handle, 'String');
    if(isempty(the_txt)), set(handle, 'BackgroundColor', settings.cntrls.colours.bg.warning);
    else set(handle, 'BackgroundColor', settings.cntrls.colours.bg.done); end, drawnow
end

% GROUP callback
function pop_Group_Callback(handle, event)
    gui_hndl = get(handle, 'Parent'); settings = get(gui_hndl, 'UserData');   
    the_index = get(handle, 'Value');
    if(the_index == 1), set(handle, 'ForegroundColor', settings.cntrls.colours.bg.warning);
    else set(handle, 'ForegroundColor', settings.cntrls.colours.fg.done); end, drawnow
end

% % AGE callback
% function pop_Age_Callback(handle, event)
%     gui_hndl = get(handle, 'Parent'); settings = get(gui_hndl, 'UserData');   
%     the_index = get(handle, 'Value');
%     if(the_index == 1), set(handle, 'ForegroundColor', settings.cntrls.colours.bg.warning);
%     else set(handle, 'ForegroundColor', settings.cntrls.colours.fg.done); end, drawnow
% end

% AGE callback
function edt_Age_Callback(handle, event)
    gui_hndl = get(handle, 'Parent'); settings = get(gui_hndl, 'UserData');   
    the_txt = get(handle, 'String');
    if(isempty(the_txt)), set(handle, 'BackgroundColor', settings.cntrls.colours.bg.warning);
    else set(handle, 'BackgroundColor', settings.cntrls.colours.bg.done); end, drawnow
end

% GENDER callback
function pop_Gender_Callback(handle, event)
    gui_hndl = get(handle, 'Parent'); settings = get(gui_hndl, 'UserData');   
    the_index = get(handle, 'Value');
    if(the_index == 1), set(handle, 'ForegroundColor', settings.cntrls.colours.bg.warning);
    else set(handle, 'ForegroundColor', settings.cntrls.colours.fg.done); end, drawnow
end

% BLOCKS callback
function pop_Blocks_Callback(handle, event)
    gui_hndl = get(handle, 'Parent'); settings = get(gui_hndl, 'UserData');   
    the_index = get(handle, 'Value');
    if(the_index == 1), set(handle, 'ForegroundColor', settings.cntrls.colours.bg.warning);
    else set(handle, 'ForegroundColor', settings.cntrls.colours.fg.done); end, drawnow
end

% SETS callback
function pop_Sets_Callback(handle, event)
    gui_hndl = get(handle, 'Parent'); settings = get(gui_hndl, 'UserData');   
    the_index = get(handle, 'Value');
    if(the_index == 1), set(handle, 'ForegroundColor', settings.cntrls.colours.bg.warning);
    else set(handle, 'ForegroundColor', settings.cntrls.colours.fg.done); end, drawnow
end

% ROUTINE callback
function pop_Routine_Callback(handle, event)
    gui_hndl = get(handle, 'Parent'); settings = get(gui_hndl, 'UserData');   
    the_index = get(handle, 'Value');
    if(the_index == 1), set(handle, 'ForegroundColor', settings.cntrls.colours.bg.warning);
    else set(handle, 'ForegroundColor', settings.cntrls.colours.fg.done); end, drawnow
end

function btn_Start_Callback(handle,event)
    % get handle to parent
    gui_hndl = get(handle, 'Parent');
    settings = get(gui_hndl, 'UserData');
    
    % VALUES AND SANITY CHECKS
    % %%%%%%%%%%%%%%%%%%%%%%%%
    % ID
    hndl = findobj('Tag','edt_ID');
    the_txt = get(hndl, 'String');
    % do not proceed if empty ID
    if(isempty(the_txt)), set(hndl, 'BackgroundColor', settings.cntrls.colours.bg.warning); return;
    else set(hndl, 'BackgroundColor', settings.cntrls.colours.bg.done); end, drawnow
    % do not proceed if ID already exists
    the_txt
    ['data/' the_txt]
    if(exist(['data/' the_txt], 'dir')), set(hndl, 'BackgroundColor', settings.cntrls.colours.bg.warning); return; 
    else set(hndl, 'BackgroundColor', settings.cntrls.colours.bg.done); end, drawnow
    session_info.ID = the_txt;
    
    % School
    hndl = findobj('Tag','edt_School');
    the_txt = get(hndl, 'String');
    if(isempty(the_txt)), set(hndl, 'BackgroundColor', settings.cntrls.colours.bg.warning); return;
    else set(hndl, 'BackgroundColor', settings.cntrls.colours.bg.done); end, drawnow
    session_info.school = the_txt;
    
    % GROUP
    hndl  = findobj('Tag','pop_Group');
    the_group_index = get(hndl, 'Value');
    the_index = get(hndl, 'Value');
    the_txts  = get(hndl, 'String');
    if(the_index == 1), set(hndl, 'ForegroundColor', settings.cntrls.colours.bg.warning); return;
    else set(hndl, 'ForegroundColor', settings.cntrls.colours.fg.done); end, drawnow
    session_info.group.index = the_index;
    session_info.group.txt   = the_txts{the_index};
    session_info.group.code  = the_index - 1;
    
    % AGE
%     hndl  = findobj('Tag','pop_Age');
%     the_index = get(hndl, 'Value');
%     the_txts  = get(hndl, 'String');
%     if(the_index == 1), set(hndl, 'ForegroundColor', settings.cntrls.colours.bg.warning); return;
%     else set(hndl, 'ForegroundColor', settings.cntrls.colours.fg.done); end, drawnow
%     session_info.age.index = the_index;
%     session_info.age.txt   = the_txts{the_index};    
%     session_info.age.value = str2num(session_info.age.txt);

    hndl  = findobj('Tag','edt_Age');
    the_txt  = get(hndl, 'String');
    if(isempty(str2num(the_txt))), set(hndl, 'BackgroundColor', settings.cntrls.colours.bg.warning); return;
    else set(hndl, 'BackgroundColor', settings.cntrls.colours.bg.done); end, drawnow
    session_info.age.txt   = the_txt;    
    session_info.age.value = str2num(session_info.age.txt);



    % GENDER
    hndl  = findobj('Tag','pop_Gender');
    the_index = get(hndl, 'Value');
    the_txts  = get(hndl, 'String');
    if(the_index == 1), set(hndl, 'ForegroundColor', settings.cntrls.colours.bg.warning); return;
    else set(hndl, 'ForegroundColor', settings.cntrls.colours.fg.done); end, drawnow
    session_info.gender.index = the_index;
    session_info.gender.txt   = the_txts{the_index};    
    session_info.gender.code  = the_index - 1;
    
    % BLOCKS
    hndl  = findobj('Tag','pop_Blocks');
    the_index = get(hndl, 'Value');
    the_txts  = get(hndl, 'String');
    if(the_index == 1), set(hndl, 'ForegroundColor', settings.cntrls.colours.bg.warning); return;
    else set(hndl, 'ForegroundColor', settings.cntrls.colours.fg.done); end, drawnow
    session_info.blocks.index = the_index;
    session_info.blocks.txt   = the_txts{the_index};    
    session_info.blocks.value = str2num(session_info.blocks.txt);
    
    % SETS
    hndl  = findobj('Tag','pop_Sets');
    the_index = get(hndl, 'Value');
    the_txts  = get(hndl, 'String');
    if(the_index == 1), set(hndl, 'ForegroundColor', settings.cntrls.colours.bg.warning); return;
    else set(hndl, 'ForegroundColor', settings.cntrls.colours.fg.done); end, drawnow
    session_info.sets.index = the_index;
    session_info.sets.txt   = the_txts{the_index};    
    session_info.sets.value = str2num(session_info.sets.txt);

    
    % ROUTINE
    hndl  = findobj('Tag','pop_Routine');
    the_index = get(hndl, 'Value');
    the_txts  = get(hndl, 'String');
    if(the_index == 1), set(hndl, 'ForegroundColor', settings.cntrls.colours.bg.warning); return;
    else set(hndl, 'ForegroundColor', settings.cntrls.colours.fg.done); end, drawnow
    session_info.routine.index = the_index;
    session_info.routine.txt   = the_txts{the_index};    
    session_info.routine.code  = the_index - 1;
     
%     % fix values for number of blocks and number of sets in the block
%     session_info.blocks.value = 5;
%     session_info.sets.value   = 8;

    % close gui
    close(gui_hndl);

    close all;
    
%     % assign dummy values for development
%     session_info.ID     = 'qwer';
%     session_info.school = 'asdf';
%     session_info.group.index = 2;
%     session_info.group.txt   = 'TD';
%     session_info.group.code  = 1;
%     session_info.age.index = 2;
%     session_info.age.txt   = '10';    
%     session_info.age.value = str2num(session_info.age.txt);
%     session_info.gender.index = 2;
%     session_info.gender.txt   = 'F';  
%     session_info.gender.code  = 1;
%     session_info.routine.index = 2;
%     session_info.routine.txt   = 'Routine1';  
%     session_info.routine.code  = 1;
    
    % start session - pass on session_info to code that runs the study 
    RUN_SRT(session_info)
end